#version 460 core
#extension GL_ARB_bindless_texture : require

#define NOISE_SIZE 4

layout(bindless_sampler) uniform sampler2D depthTex;

layout(r8, binding = 0) restrict readonly uniform image2D ssaoTex;
layout(r8, binding = 1) restrict writeonly uniform image2D ssaoBlurTex;

layout (local_size_x = 8, local_size_y = 8) in;
void main() {
	ivec2 texel = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(ssaoTex);

	if(texel.x >= size.x || texel.y >= size.y) return;

	float result = 0.0f;
	float normalizer = 0.0f;
	float depth = texelFetch(depthTex, texel * 2, 0).r;
	for(int x = -NOISE_SIZE / 2; x < NOISE_SIZE / 2; x++) {
		for(int y = -NOISE_SIZE / 2; y < NOISE_SIZE / 2; y++) {
			float closeness = clamp(1.0f - abs(depth - texelFetch(depthTex, (texel + ivec2(x, y)) * 2, 0).r), 0.0f, 1.0f);
			result += imageLoad(ssaoTex, texel + ivec2(x, y)).r * closeness;
			normalizer += closeness;
		}
	}
	result /= normalizer;
	imageStore(ssaoBlurTex, texel, vec4(result, 0.0f, 0.0f, 0.0f));
}